/*
 * Keenan Johnson
 *
 * Library for controller
 * Motherboard Muxes
 */
#pragma once
#ifndef MUXES_H_
#define MUXES_H_

///HACKS
//#include <stdint.h>
#include <stdbool.h>
//#include "inc/hw_gpio.h"
//#include "driverlib/pin_map.h"
//#include "driverlib/sysctl.c"
//#include "driverlib/sysctl.h"
#include "driverlib/gpio.h"
//#include "driverlib/gpio.c"
//#include "inc/hw_types.h"
#include "inc/hw_memmap.h"

	//////////////////////
	// Mux # - S0, S1
	//////////////////////

// Function to change mux 1 to
// RS-485 transceivers below
//
//
// 1, 8, ,9
// EK_TM4C1294XL_PH0 : U3_MUX_S0
// EK_TM4C1294XL_PH1 : U3_MUX_S1
void mux_1( int rs_485_transceiver)
{

	switch(rs_485_transceiver){
		case 1 :
			GPIOPinWrite(GPIO_PORTH_BASE, (GPIO_PIN_0 | GPIO_PIN_1), (0));
		break;
		case 8 :
			GPIOPinWrite(GPIO_PORTH_BASE, (GPIO_PIN_0), (~0));
			GPIOPinWrite(GPIO_PORTH_BASE, (GPIO_PIN_1), (0));
		break;
		case 9 :
			GPIOPinWrite(GPIO_PORTH_BASE, (GPIO_PIN_0), (0));
			GPIOPinWrite(GPIO_PORTH_BASE, (GPIO_PIN_1), (~0));
		break;

	default :
		// Not a valid input
		System_printf("Not a valid MUX_1 Transceiver");
		System_flush();

	break;
	}//endswitch
}//endfnctn mux_1

// Function to change mux 2 to
// RS-485 transceivers below
//
//
// 2, 7, 10
// EK_TM4C1294XL_PM6 : U4_MUX_S0
// EK_TM4C1294XL_PM7 : U4_MUX_S1
void mux_2( int rs_485_transceiver)
{

	switch(rs_485_transceiver){
		case 2 :
			GPIOPinWrite(GPIO_PORTM_BASE, (GPIO_PIN_6 | GPIO_PIN_7), (0));
		break;
		case 7 :
			GPIOPinWrite(GPIO_PORTM_BASE, (GPIO_PIN_6), (~0));
			GPIOPinWrite(GPIO_PORTM_BASE, (GPIO_PIN_7), (0));
		break;
		case 10 :
			GPIOPinWrite(GPIO_PORTM_BASE, (GPIO_PIN_6), (0));
			GPIOPinWrite(GPIO_PORTM_BASE, (GPIO_PIN_7), (~0));
		break;

	default :
		// Not a valid input
		System_printf("Not a valid MUX_2 Transceiver");
		System_flush();

	break;
	}//endswitch
}//endfnctn mux_2

// Function to change mux 3 to
// RS-485 transceivers below
//
//
// 3, 6, 11
// EK_TM4C1294XL_PL0 : U5_MUX_S0
// EK_TM4C1294XL_PL1 : U5_MUX_S1
void mux_3( int rs_485_transceiver)
{

	switch(rs_485_transceiver){
		case 3 :
			GPIOPinWrite(GPIO_PORTL_BASE, (GPIO_PIN_0 | GPIO_PIN_1), (0));
		break;
		case 6 :
			GPIOPinWrite(GPIO_PORTL_BASE, (GPIO_PIN_0), (~0));
			GPIOPinWrite(GPIO_PORTL_BASE, (GPIO_PIN_1), (0));
		break;
		case 11 :
			GPIOPinWrite(GPIO_PORTL_BASE, (GPIO_PIN_0), (0));
			GPIOPinWrite(GPIO_PORTL_BASE, (GPIO_PIN_1), (~0));
		break;

	default :
		// Not a valid input
		System_printf("Not a valid MUX_3 Transceiver");
		System_flush();

	break;
	}//endswitch
}//endfnctn mux_3


#endif /* MUXES_H_ */
