//	TODO: Port To Fresh Build (using TI example:			This version educational practice not for distro)

//C lib

#include <string.h>

//CCS TI config

#include <xdc/std.h>

#include <xdc/cfg/global.h>

#include <xdc/runtime/Error.h>
#include <xdc/runtime/System.h>

//CCS TI operating system

#include <ti/sysbios/BIOS.h>
#include <ti/sysbios/knl/Task.h>

//CCS TI NDK BSD support

#include <sys/socket.h>

//defines target device

#include "Board.h"

//TI hardware access routines

#include <ti/drivers/GPIO.h>
#include <ti/drivers/UART.h>


//globally init UART handles

	UART_Handle uart0;
    UART_Handle uart1;
    UART_Handle uart2;
    UART_Handle uart3;
    UART_Handle uart4;
    UART_Handle uart5;
    UART_Handle uart6;
    UART_Handle uart7;

//
//  ======== init main  ========
//
int main(void)
{

//init TI board driver routines

    Board_initGeneral();
    Board_initGPIO();
    Board_initUART();

//init UARTS

	uart0 = init_uart( 0, 115200 );
    uart1 = init_uart( 1, 115200 );
	uart2 = init_uart( 2, 115200 );
	uart3 = init_uart( 3, 115200 );
	uart4 = init_uart( 4, 115200 );
	uart5 = init_uart( 5, 115200 );
	uart7 = init_uart( 7, 115200 );

//start TI BIOS

    BIOS_start();

//exit BIOS

    return (0);

}//endmain: 		RoverMotherboardMain
