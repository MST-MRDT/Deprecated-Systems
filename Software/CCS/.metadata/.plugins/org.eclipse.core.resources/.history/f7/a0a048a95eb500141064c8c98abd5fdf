/*
 * telemHwiUart1.c
 *
 *  Created on: Feb 14, 2015
 *      Author: mrdtdev
 */

#include "telemHwiUart1.h"

Void telemHwiUart1(UArg arg0, UArg arg1)
{
	System_printf("telemHwiUart1 has started\n");
	System_flush();

	// define extern UARTs
	extern UART_Handle uart0;
	extern UART_Handle uart1;
	extern UART_Handle uart2;
	extern UART_Handle uart3;
	extern UART_Handle uart4;
	extern UART_Handle uart5;
	extern UART_Handle uart6;
	extern UART_Handle uart7;

	// Motor Data Struct
	struct motor_data_struct motor_data_struct;

	// Valid Data Flag
	bool motor_data_is_valid = false;

	while(1)
	{
		//TODO write a mux loop with timeout to decide which device
		mux_2( 10 );
		//ms_delay( 1 );

		//Read Uarts
		motor_data_is_valid = recv_struct( uart1, &motor_data_struct, motor_controller );

		if ( motor_data_is_valid )
		{
			//Put the data in a mailbox
			Mailbox_post(fromUartsMailbox, &motor_data_struct, BIOS_WAIT_FOREVER);
		}//endif
		else
		{
			System_printf("recv_struct( uart1, &motor_data_struct, motor_controller ) error!\n");
			System_flush();
		}//endelse

	}//endwhile

}//endfnctn

/*/////////////////////
		// Drill Telemetry
		/////////////////////
		if ( drill_telem_active )
		{
			// Switch mux
			mux_2(10);
			ms_delay( 5 );

			drill_telem_valid = recv_struct( uart2, &drill_telem, drill );

			if ( drill_telem_valid )
			{
				generate_json_strings(json, "0000", "Drill Data Valid");
				write_json(uart7, json);

				// Hydrogen Reading
				generate_json_int(json, "6015", drill_telem.hydrogenReading);
				write_json(uart7, json);
				ms_delay( delay );

				// Methane Reading
				generate_json_int(json, "6016", drill_telem.methaneReading);
				write_json(uart7, json);
				ms_delay( delay );

				// Ammonia Reading
				generate_json_int(json, "6017", drill_telem.ammoniaReading);
				write_json(uart7, json);
				ms_delay( delay );

				generate_json_float(json, "6018", drill_telem.temp);
				write_json(uart7, json);
				ms_delay( delay );

				// Actual Speed
				generate_json_int(json, "6019", drill_telem.actualSpeed);
				write_json(uart7, json);
				ms_delay( delay );

				// Goal Current
				generate_json_int(json, "6020", drill_telem.goalCurrent);
				write_json(uart7, json);
				ms_delay( delay );

				// Actual Current
				generate_json_int(json, "6021", drill_telem.actualCurrent);
				write_json(uart7, json);
				ms_delay( delay );
			}

			else
			{
				generate_json_strings(json, "0000", "Drill Data Not Valid");
				write_json(uart7, json);
			}
		}
	}
}
