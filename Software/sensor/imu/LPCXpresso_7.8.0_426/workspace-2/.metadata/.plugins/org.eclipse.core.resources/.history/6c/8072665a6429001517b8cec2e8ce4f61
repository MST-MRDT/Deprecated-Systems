#ifndef __I2C_H_
#define __I2C_H_

#include <stdlib.h>
#include <string.h>
#include "board.h"

#define BUFFER_LENGTH 32

class Wire {
private:
	static uint8_t rxBuffer[];
	static uint8_t rxBufferIndex;
	static uint8_t rxBufferLength;

	static uint8_t txAddress;
	static uint8_t txBuffer[];
	static uint8_t txBufferIndex;
	static uint8_t txBufferLength;

	static uint8_t transmitting;
public:
	// Constructor
	Wire();

	// Init Wire object with default parameters
	void begin();

	// Set transmitting, set address, reset buffer index and length
	void beginTransmission(uint8_t);

	// Reset transmitting, reset buffer index and length, send stop
	uint8_t endTransmission(void);

	// Reset transmitting, reset buffer index and length, send stop if necessary
	uint8_t endTransmission(uint8_t);

	// Request data from slave register address
	uint8_t requestFrom(uint8_t, uint8_t);

	// Load data in buffer, inc buffer index/length
	size_t write(uint8_t);

	// Return true if not receiving data
	int available(void);

	// Fill Rx buffer with result of requestFrom
	int read(void);
};

extern Wire Wire;

#endif /* __I2C_H__ */
